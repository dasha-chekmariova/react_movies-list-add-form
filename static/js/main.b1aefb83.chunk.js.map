{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","addMovie","useState","valueTitle","setValueTitle","valueDescription","setValueDescription","valueImgUrl","setValueImgUrl","valueImdbUrl","setValueImdbUrl","valueImdbId","setValueImdbId","errorTitle","setErrorTitle","errorImgUrl","setErrorImgUrl","errorImdbUrl","setErrorImdbUrl","errorImdbId","setErrorImdbId","regex","chechRegex","url","test","onSubmit","event","preventDefault","newMovie","callAdd","type","placeholder","value","onChange","currentTarget","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1aefb83.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  addMovie: (movie: Movie) => void\n};\n\nexport const NewMovie: React.FC<Props> = ({ addMovie }) => {\n  const [valueTitle, setValueTitle] = useState('');\n  const [valueDescription, setValueDescription] = useState('');\n  const [valueImgUrl, setValueImgUrl] = useState('');\n  const [valueImdbUrl, setValueImdbUrl] = useState('');\n  const [valueImdbId, setValueImdbId] = useState('');\n\n  const [errorTitle, setErrorTitle] = useState('');\n  const [errorImgUrl, setErrorImgUrl] = useState('');\n  const [errorImdbUrl, setErrorImdbUrl] = useState('');\n  const [errorImdbId, setErrorImdbId] = useState('');\n\n  // eslint-disable-next-line max-len\n  const [regex] = useState(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n\n  const chechRegex = (url: string) => (\n    !regex.test(url)\n  );\n\n  const callAdd = (newMovie: Movie) => {\n    addMovie(newMovie);\n\n    setValueTitle('');\n    setValueDescription('');\n    setValueImgUrl('');\n    setValueImdbUrl('');\n    setValueImdbId('');\n  };\n\n  const onAdd = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const newMovie = {\n      title: valueTitle,\n      description: valueDescription,\n      imgUrl: valueImgUrl,\n      imdbUrl: valueImdbUrl,\n      imdbId: valueImdbId,\n    };\n\n    if (!valueTitle) {\n      setErrorTitle('You forgot to enter a title');\n    }\n\n    if (!valueImgUrl) {\n      setErrorImgUrl('You forgot to enter a ImgUrl');\n    }\n\n    if (!valueImdbUrl) {\n      setErrorImdbUrl('You forgot to enter a ImdbUrl');\n    }\n\n    if (!valueImdbId) {\n      setErrorImdbId('You forgot to enter a ImdbIdl');\n    }\n\n    if (valueImgUrl && chechRegex(valueImgUrl)) {\n      setErrorImgUrl('Enter a correct ImgUrl');\n    }\n\n    if (valueImdbUrl && chechRegex(valueImdbUrl)) {\n      setErrorImdbUrl('Enter a correct ImdbUrl');\n    }\n\n    if (valueImdbId && chechRegex(valueImdbId)) {\n      setErrorImdbId('Enter a correct ImdbId');\n    }\n\n    if (valueTitle\n      && !chechRegex(valueImgUrl)\n      && !chechRegex(valueImdbUrl)\n      && !chechRegex(valueImdbId)\n    ) {\n      callAdd(newMovie);\n    }\n  };\n\n  return (\n    <form onSubmit={onAdd}>\n      <p className=\"title\">Add your movie!</p>\n\n      <input\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Enter a title\"\n        value={valueTitle}\n        onChange={(event) => {\n          setValueTitle(event.currentTarget.value);\n          setErrorTitle('');\n        }}\n      />\n      {errorTitle && <p className=\"error\">{errorTitle}</p>}\n\n      <textarea\n        className=\"textarea has-fixed-size\"\n        placeholder=\"Enter a description\"\n        value={valueDescription}\n        onChange={(event) => {\n          setValueDescription(event.currentTarget.value);\n        }}\n      />\n\n      <input\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Enter an imgUrl\"\n        value={valueImgUrl}\n        onChange={(event) => {\n          setValueImgUrl(event.currentTarget.value);\n          setErrorImgUrl('');\n        }}\n      />\n      {errorImgUrl && <p className=\"error\">{errorImgUrl}</p>}\n\n      <input\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Enter an imdbUrl\"\n        value={valueImdbUrl}\n        onChange={(event) => {\n          setValueImdbUrl(event.currentTarget.value);\n          setErrorImdbUrl('');\n        }}\n      />\n      {errorImdbUrl && <p className=\"error\">{errorImdbUrl}</p>}\n\n      <input\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Enter an imdbId\"\n        value={valueImdbId}\n        onChange={(event) => {\n          setValueImdbId(event.currentTarget.value);\n          setErrorImdbId('');\n        }}\n      />\n      {errorImdbId && <p className=\"error\">{errorImdbId}</p>}\n\n      <button\n        type=\"submit\"\n        className=\"button is-link is-light\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}